from pathlib import Path
import matplotlib.pyplot as plt
import numpy as np

def load_file(file_path: str) -> str:
    with open(file_path, 'r', encoding='utf-8') as file:  # 指定编码为 utf-8
        return file.read()


def load_evaluate_method(file_path: str) -> str:
    content = load_file(file_path)
    method_start = content.find('def _evaluate(self, position: np.ndarray) -> float:')
    if method_start == -1:
        raise ValueError("Method _evaluate not found in the file.")   
    method_end = content.find('def ', method_start + 1)
    if method_end == -1:
        method_end = len(content)
    evaluate_content = content[method_start:method_end] 
    return evaluate_content

def save_file(file_path: str, content: str) -> None:
    with open(file_path, 'w',encoding='utf-8') as file:
        file.write(content)

def update_evaluate_method(file_path: str, new_method_content: str) -> None:
    content = load_file(file_path)
    method_start = content.find('def _evaluate(self, position: np.ndarray) -> float:')
    if method_start == -1:
        raise ValueError("Method _evaluate not found in the file.")
    
    method_end = content.find('def ', method_start + 1)
    if method_end == -1:
        method_end = len(content)

    updated_content = content[:method_start] + new_method_content + content[method_end:]
    save_file(file_path, updated_content)

    # #测试
    # print("success")
    # x = np.array([1, 2, 3, 4, 5])
    # y = np.array([1, 4, 9, 16, 25])

    # # 使用 matplotlib 绘图
    # plt.figure()
    # plt.plot(x, y, 'ro--', label='Example Curve')
    # plt.xlabel('Position')
    # plt.ylabel('Score')
    # plt.legend()
    # plt.title('Generated by plot_curve')
    # plt.show()  # 调用重定向后的 show 函数